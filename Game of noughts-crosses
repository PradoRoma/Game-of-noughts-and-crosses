board = [' ',' ',' ',' ',' ',' ',' ',' ',' ']

def PrintState(state):
    for i, c in enumerate(state):
        if (i+1)%3==0:
            print(f'{c}')
        else:
            print(f'{c}|', end='')

PrintState(board) #Просто проверка работоспособности, тем самым подтверждаем, что поле готово. (не обязательная строчка)

winning_combinations = [(0,1,2), (3,4,5), (6,7,8),(0,3,6), (1,4,7), (2,5,8), (0,4,8), (2,4,6)]  #Создаем создаем список из победных триплетов(варианты для победы)

def GetWinner(state, combinations):  #Метод определяет возможности для победы, тут важно, что бы 1 аргумент(x,y или z) равен Х или О, тогда получим выйграшную комбинацию
    for (x, y, z) in combinations:
        if state[x]==state[y] and state[y]==state[z] and (state[x]=='X' or state[x] == 'O'):
            return state[x]
    return ''


def PlayGame(board):
    current_sign = 'X'  #Первые у нас ходят Х
    while (GetWinner(board, winning_combinations) == ''):
        index = int(input(f'Where do you want to draw {current_sign}?'))
        board[index] = current_sign

        PrintState(board)

        winner_sign = GetWinner(board, winning_combinations)  #Определяем нашего победителя
        if winner_sign != '':
            print(f'We have a winner: {winner_sign}')

        current_sign = 'X' if current_sign == 'O' else 'O' #Определяем очередность хода

PlayGame(board)
